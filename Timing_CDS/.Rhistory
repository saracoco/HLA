df
df <- as.data.frame(accepted_mutations_UPN04)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV[seg_assignment==1]/DP[seg_assignment==1]))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
hist_data_extra
df <- as.data.frame(accepted_mutations_UPN04)
hist_data_extra <- df[seg_assignment==1] %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df <- as.data.frame(accepted_mutations_UPN04)
hist_data_extra <- df[df$seg_assignment==1] %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df
df <- as.data.frame(accepted_mutations_UPN04)
hist_data_extra <- df[df$seg_assignment==1] %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df[df$seg_assignment==1]
df
df[karyotype==0]
df[df$karyotype==0]
df <- as.data.frame(accepted_mutations_UPN04)
hist_data_extra <- df[df["seg_assignment"]==1] %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df[df["seg_assignment"]==1]
df[df["seg_assignment"==1]
]
df["seg_assignment"==1]
df_a <- df["seg_assignment"==1]
df_a
df
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
hist_data_extra
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- as.data.frame(accepted_mutations2_UPN04) %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
hist_data_LSH
accepted_mutations_UPN04 <- readRDS("./results/input_data1_UPN04.rds")
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
hist_data_extra
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- as.data.frame(accepted_mutations2_UPN04) %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
hist_data_LSH
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
df
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
hist_data_LSH
hist_data_extra
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
hist_data_LSH
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
hist_data_extra
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_inference_04 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'UPN04 LSH and extra event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_inference_04
accepted_mutations_UPN04 <- readRDS("./results/input_data1_UPN04.rds")
accepted_mutations_UPN05 <- readRDS("./results/input_data1_UPN05.rds")
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_mutations_04 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_04
ggsave(paste0("./plots/accepted_mutations",names[1],".png"), width = 12, height = 16, device = "png", plot=plot_mutations_04)
accepted_mutations_UPN05 <- as.data.frame(accepted_mutations_UPN05)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN05 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df <- filter(accepted_mutations_UPN05, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN05 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_mutations_05 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_05
ggsave(paste0("./plots/accepted_mutations",names[1],".png"), width = 12, height = 16, device = "png", plot=plot_mutations_05)
ggsave(paste0("./plots/accepted_mutations",names[1],".png"), width = 14, height = 8, device = "png", plot=plot_mutations_04)
ggsave(paste0("./plots/accepted_mutations",names[1],".png"), width = 14, height = 8, device = "png", plot=plot_mutations_05)
accepted_mutations_UPN05 <- as.data.frame(accepted_mutations_UPN05)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 extra", data_lsh["UPN04_LSH"]$UPN04$segment.REL[1])
df <- filter(accepted_mutations_UPN05, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_mutations_05 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_05
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04_LSH$segment.REL[1])
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_mutations_04 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_04
ggsave(paste0("./plots/accepted_mutations_UPN04.png"), width = 14, height = 8, device = "png", plot=plot_mutations_04)
accepted_mutations_UPN05 <- as.data.frame(accepted_mutations_UPN05)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 extra", data_lsh["UPN05_LSH"]$UPN05_LSH$segment.REL[1])
df <- filter(accepted_mutations_UPN05, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 LSH", data_lsh["UPN05"]$UPN05$segment.REL[1])
plot_mutations_05 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_05
ggsave(paste0("./plots/accepted_mutations_UPN05.png"), width = 14, height = 8, device = "png", plot=plot_mutations_05)
accepted_mutations_UPN05 <- as.data.frame(accepted_mutations_UPN05)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 extra", data_lsh["UPN05_LSH"]$UPN05_LSH$segment.REL[1])
df <- filter(accepted_mutations_UPN05, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 LSH", data_lsh["UPN05"]$UPN05$segment.REL[1])
plot_mutations_05 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN05 LSH and UPN05 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_05
ggsave(paste0("./plots/accepted_mutations_UPN05.png"), width = 14, height = 8, device = "png", plot=plot_mutations_05)
#UPN04
input_data_1 <- readRDS("./results/input_data1_UPN04.rds")
input_data_2 <- readRDS("./results/input_data2_UPN04.rds")
res_1 <- readRDS("./results/res1_UPN04.rds")
res_2 <- readRDS("./results/res2_UPN04.rds")
p_1 <- plotting(res_1,input_data_1,1)
gc()
library(dplyr)
library(ggplot2)
library(patchwork)
library(loo)
library(bayesplot)
library(cmdstanr)
library(factoextra)
library(ppclust)
setwd("C:/Users/sarac/CDS/CopyNumber")
source("./CNTiming/R/simulate_functions.R")
source("./CNTiming/R/fitting_functions.R")
source("./CNTiming/R/plotting_functions.R")
# LOAD DATA #
setwd("E:/scratch/CDS_ORFEO/Timing_CDS")
setwd("C:/Users/sarac/CDS/CopyNumber")
source("./CNTiming/R/simulate_functions.R")
source("./CNTiming/R/fitting_functions.R")
source("./CNTiming/R/plotting_functions.R")
# LOAD DATA #
setwd("E:/scratch/CDS_ORFEO/Timing_CDS")
# LOAD DATA #
setwd("E:/scratch/CDS_ORFEO/Timing_CDS")
UPN04_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN04/mutations.rds")
UPN05_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN05/mutations.rds")
UPN04_alpha_beta <- readRDS("Data/alpha_beta/UPN04/mutations.rds")
UPN05_alpha_beta <- readRDS("Data/alpha_beta/UPN05/mutations.rds")
# FILTERING #
UPN04_extra_NV = UPN04_extra %>% filter(timing_classification %in% c("alpha private", "beta"),PASS == TRUE)
UPN05_extra_NV = UPN05_extra %>% filter(timing_classification  %in% c("alpha private", "beta"),chr == "chr1",PASS == TRUE)
UPN04_alpha_beta_NV = UPN04_alpha_beta %>% ungroup %>% filter(timing_classification %in% c("alpha"),PASS == TRUE)
UPN05_alpha_beta_NV = UPN05_alpha_beta %>% filter(timing_classification %in% c("alpha", "beta"),PASS == TRUE)
data_lsh <- list(UPN04 = UPN04_extra_NV, UPN05 = UPN05_extra_NV, UPN04_LSH = UPN04_alpha_beta_NV, UPN05_LSH = UPN05_alpha_beta_NV)
#names <- c("UPN04","UPN04_LSH", "UPN05", "UPN05_LSH")
names <- c("UPN04","UPN04_LSH")
#names <- c("UPN05", "UPN05_LSH")
data <- dplyr::tibble()
karyo_all <- c()
for(i in 1:length(names)){
data_single <- data_lsh[[names[i]]]
data_single <- data_single %>% rename(karyo = segment.REL,
DP = DP.REL,
NV = NV.REL) %>%
mutate(j = paste0(names[i]),
segment_id = i,
karyo = as.character(karyo))
karyo <- data_single$karyo[1]
data <- dplyr::bind_rows(data, data_single)
karyo_all <- c(karyo_all, karyo)
}
##### INFERENCE MODEL SEELECTION MULTIPLE K ##################################################################################
results <- fit_model_selection_best_K(data, karyo=karyo_all, purity=0.98, INIT=FALSE)
names <- c("UPN05", "UPN05_LSH")
data <- dplyr::tibble()
karyo_all <- c()
for(i in 1:length(names)){
data_single <- data_lsh[[names[i]]]
data_single <- data_single %>% rename(karyo = segment.REL,
DP = DP.REL,
NV = NV.REL) %>%
mutate(j = paste0(names[i]),
segment_id = i,
karyo = as.character(karyo))
karyo <- data_single$karyo[1]
data <- dplyr::bind_rows(data, data_single)
karyo_all <- c(karyo_all, karyo)
}
##### INFERENCE MODEL SEELECTION MULTIPLE K ##################################################################################
results <- fit_model_selection_best_K(data, karyo=karyo_all, purity=0.98, INIT=FALSE)
results$model_selection_tibble
plot(results$model_selection_tibble$K, results$model_selection_tibble$LOO)
gc()
library(dplyr)
library(ggplot2)
library(patchwork)
library(loo)
library(bayesplot)
library(cmdstanr)
library(factoextra)
library(ppclust)
setwd("C:/Users/sarac/CDS/CopyNumber")
source("./CNTiming/R/simulate_functions.R")
source("./CNTiming/R/fitting_functions.R")
source("./CNTiming/R/plotting_functions.R")
# LOAD DATA #
setwd("E:/scratch/CDS_ORFEO/Timing_CDS")
UPN04_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN04/mutations.rds")
UPN05_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN05/mutations.rds")
UPN04_alpha_beta <- readRDS("Data/alpha_beta/UPN04/mutations.rds")
UPN05_alpha_beta <- readRDS("Data/alpha_beta/UPN05/mutations.rds")
# FILTERING #
UPN04_extra_NV = UPN04_extra %>% filter(timing_classification %in% c("alpha private", "beta"),PASS == TRUE)
UPN05_extra_NV = UPN05_extra %>% filter(timing_classification  %in% c("alpha private", "beta"),chr == "chr1",PASS == TRUE)
UPN04_alpha_beta_NV = UPN04_alpha_beta %>% ungroup %>% filter(timing_classification %in% c("alpha"),PASS == TRUE)
UPN05_alpha_beta_NV = UPN05_alpha_beta %>% filter(timing_classification %in% c("alpha", "beta"),PASS == TRUE)
data_lsh <- list(UPN04 = UPN04_extra_NV, UPN05 = UPN05_extra_NV, UPN04_LSH = UPN04_alpha_beta_NV, UPN05_LSH = UPN05_alpha_beta_NV)
#names <- c("UPN04","UPN04_LSH", "UPN05", "UPN05_LSH")
names <- c("UPN04","UPN04_LSH")
#names <- c("UPN05", "UPN05_LSH")
data <- dplyr::tibble()
karyo_all <- c()
for(i in 1:length(names)){
data_single <- data_lsh[[names[i]]]
data_single <- data_single %>% rename(karyo = segment.REL,
DP = DP.REL,
NV = NV.REL) %>%
mutate(j = paste0(names[i]),
segment_id = i,
karyo = as.character(karyo))
karyo <- data_single$karyo[1]
data <- dplyr::bind_rows(data, data_single)
karyo_all <- c(karyo_all, karyo)
}
##### INFERENCE MODEL SEELECTION MULTIPLE K ##################################################################################
results <- fit_model_selection_best_K(data, karyo=karyo_all, purity=0.98, INIT=FALSE)
setwd("C:/Users/sarac/CDS/CopyNumber")
source("./CNTiming/R/simulate_functions.R")
source("./CNTiming/R/fitting_functions.R")
source("./CNTiming/R/plotting_functions.R")
# LOAD DATA #
setwd("E:/scratch/CDS_ORFEO/Timing_CDS")
UPN04_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN04/mutations.rds")
UPN05_extra <- readRDS("Data/extra_cnloh/alpha_beta/UPN05/mutations.rds")
UPN04_alpha_beta <- readRDS("Data/alpha_beta/UPN04/mutations.rds")
UPN05_alpha_beta <- readRDS("Data/alpha_beta/UPN05/mutations.rds")
# FILTERING #
UPN04_extra_NV = UPN04_extra %>% filter(timing_classification %in% c("alpha private", "beta"),PASS == TRUE)
UPN05_extra_NV = UPN05_extra %>% filter(timing_classification  %in% c("alpha private", "beta"),chr == "chr1",PASS == TRUE)
UPN04_alpha_beta_NV = UPN04_alpha_beta %>% ungroup %>% filter(timing_classification %in% c("alpha"),PASS == TRUE)
UPN05_alpha_beta_NV = UPN05_alpha_beta %>% filter(timing_classification %in% c("alpha", "beta"),PASS == TRUE)
data_lsh <- list(UPN04 = UPN04_extra_NV, UPN05 = UPN05_extra_NV, UPN04_LSH = UPN04_alpha_beta_NV, UPN05_LSH = UPN05_alpha_beta_NV)
#names <- c("UPN04","UPN04_LSH", "UPN05", "UPN05_LSH")
#names <- c("UPN04","UPN04_LSH")
names <- c("UPN05", "UPN05_LSH")
data <- dplyr::tibble()
karyo_all <- c()
for(i in 1:length(names)){
data_single <- data_lsh[[names[i]]]
data_single <- data_single %>% rename(karyo = segment.REL,
DP = DP.REL,
NV = NV.REL) %>%
mutate(j = paste0(names[i]),
segment_id = i,
karyo = as.character(karyo))
karyo <- data_single$karyo[1]
data <- dplyr::bind_rows(data, data_single)
karyo_all <- c(karyo_all, karyo)
}
results <- fit_model_selection_best_K(data, karyo=karyo_all, purity=0.98, INIT=FALSE)
model_selection_tibble
results$model_selection_tibble
accepted_mutations_UPN04 <- readRDS("./results/input_data1_UPN04.rds")
accepted_mutations_UPN05 <- readRDS("./results/input_data1_UPN05.rds")
#UPN04
accepted_mutations_UPN04 <- as.data.frame(accepted_mutations_UPN04)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 extra", data_lsh["UPN04_LSH"]$UPN04_LSH$segment.REL[1])
df <- filter(accepted_mutations_UPN04, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1) +
ylim(0, 5) +
ggtitle("UPN04 LSH", data_lsh["UPN04"]$UPN04$segment.REL[1])
plot_mutations_04 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN04 LSH and UPN04 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_04
ggsave(paste0("./plots/accepted_mutations_UPN04.png"), width = 14, height = 8, device = "png", plot=plot_mutations_04)
#UPN05
accepted_mutations_UPN05 <- as.data.frame(accepted_mutations_UPN05)
df <- filter(accepted_mutations_UPN04, seg_assignment == 1)
hist_data_extra <- df %>%
ggplot(mapping = aes(x=(NV/DP))) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 extra", data_lsh["UPN05_LSH"]$UPN05_LSH$segment.REL[1])
df <- filter(accepted_mutations_UPN05, seg_assignment == 2)
hist_data_LSH <- df %>%
ggplot(mapping = aes(x=(NV/DP), fill=timing_classification)) +
geom_histogram(binwidth=0.01, , fill="blue", alpha = 0.5, position = "identity") +
theme(legend.position = 'top') +
xlim(0, 1.5) +
ylim(0, 5) +
ggtitle("UPN05 LSH", data_lsh["UPN05"]$UPN05$segment.REL[1])
plot_mutations_05 <- (hist_data_extra + hist_data_LSH) +
plot_layout(widths = c(6), heights = c(10)) +
plot_annotation(
title = 'Accepted mutations after inference on UPN05 LSH and UPN05 extra CN event ',
subtitle = " ", #Extra event is on chr
caption = "" #caption
) & theme(text = element_text(size = 8), plot.title = element_text(size = 10), plot.subtitle = element_text(size = 8), axis.text = element_text(size = 8), plot.caption = element_text(size = 5))
plot_mutations_05
ggsave(paste0("./plots/accepted_mutations_UPN05.png"), width = 14, height = 8, device = "png", plot=plot_mutations_05)
