library(ggplot2)
library(tidyverse)
library(rstan)
library(cmdstanr)
source("scripts/fit.R")
setwd("~/DOCUMENTI/DESKTOP/0_TRIESTE_STAT/0_TRIESTE/0_ESAMI_2/COMPUTATIONAL_BIOLOGY/14/lecture_cn")
source("scripts/fit.R")
source("scripts/utils.R")
source("scripts/simulate_mutations.R")
source("scripts/plot.R")
# Parameters of tumor purity and coverage
purity <- .95
coverage <- 100
# General parameters
time_interval = 50
l = 15e6    #length of the CN event
mu = 1e-8   #mutation rate
w = 10      #grow rate - cell division rate
# Karyotype
karyotypes = c('2:0','2:1','2:2','2:0','2:1')
tau_list = c(0.3,0.3,0.3,0.8,0.8)
# simulate segments with custom functions
plot_list_VAF = list()
plot_list_tau = list()
for (i in 1:5)
{karyotype=karyotypes[i]
tau=tau_list[i]
mutations <- simulate_mutations(karyotype, time_interval, tau, l, mu, w)
mutations <- add_DP_and_NV(karyotype, mutations, coverage, purity)
model = cmdstanr::cmdstan_model("models/mixture_CNA_timing_binomial.stan") #correct declaration of the variables for last version of stan
k=karyotypes[i]
input_data <- list(
N = nrow(mutations),
DP = mutations$DP,
NV = mutations$NV,
peaks = array(get_clonal_peaks(k= k, purity = 0.95))
) #qui ho aggiunto array altrimenti non riusciva ad attribuirgli le dimensioni corrette, spero sia giusto
fit <- model$sample(data=input_data, iter_warmup=2000, iter_sampling=2000, chains=8, parallel_chains=8)
# We plot some relevant statistics
# plot simulated vaf
#ggplot(mutations %>% mutate(VAF = NV/DP)) + geom_histogram(aes(x = VAF),fill = "steelblue") +
# labs(title = paste( "VAF karyotype:", karyotype, sep=" "))
# Plot separate ggplot figures in a loop.
p = ggplot(mutations %>% mutate(VAF = NV/DP)) + geom_histogram(aes(x = VAF),fill = "steelblue") +
labs(title = paste( "VAF karyotype:", karyotype,",",tau, sep=" "))
plot_list_VAF[[i]] = p
# Another option: create pdf where each page is a separate plot.
pdf(paste("plots_VAF",i,".pdf"))
print(plot_list_VAF[[i]])
dev.off()
# plot tau
omega1<-fit$draws("omega[1]",format="matrix")%>%as.numeric
omega2<-fit$draws("omega[2]",format="matrix")%>%as.numeric
k = karyotypes[i]
if (k == '2:1') {
tau_posterior <- 3 * omega2 / (2*omega2 + omega1)
} else {
tau_posterior <- 2 * omega2 / (2*omega2 + omega1)
}
tau_posteriors <- tibble(tau = tau_posterior)
p = ggplot(tau_posteriors) + geom_histogram(aes(x = tau),fill = "darkgreen") + labs(title = paste("tau karyotype:", karyotype, sep=" "))
plot_list_tau[[i]] = p
# Another option: create pdf where each page is a separate plot.
pdf(paste("plots_tau",i,".pdf"))
print(plot_list_tau[[i]])
dev.off()
#ggplot(tau_posteriors) + geom_histogram(aes(x = tau),fill = "darkgreen") + labs(title = "tau karyotype ", karyotype)
}
require(gridExtra)
setwd("~/DOCUMENTI/DESKTOP/0_TRIESTE_STAT/0_TRIESTE/0_ESAMI_2/COMPUTATIONAL_BIOLOGY/14/lecture_cn")
setwd("~/DOCUMENTI/DESKTOP/0_TRIESTE_STAT/0_TRIESTE/0_ESAMI_2/COMPUTATIONAL_BIOLOGY/14/lecture_cn/scripts")
